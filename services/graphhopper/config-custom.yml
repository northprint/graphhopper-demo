graphhopper:
  # OSMデータファイルのパス
  datareader.file: /graphhopper/data/map.osm.pbf
  
  # グラフキャッシュの保存場所
  graph.location: /graphhopper/graph-cache
  
  # 標高データを無効化（デモ用）
  graph.elevation.provider: ""
  
  # エンコード値の設定（カスタムモデル用）
  graph.encoded_values: car_access, car_average_speed, bike_access, bike_average_speed, foot_access, foot_average_speed, road_class, road_environment, max_speed, surface
  
  # プロファイル設定（カスタムモデル使用）
  profiles:
    - name: car
      vehicle: car
      weighting: custom
      custom_model:
        distance_influence: 70
        priority:
          - if: "car_access == false"
            multiply_by: 0
        speed:
          - if: "car_access == true"
            limit_to: 130
          - if: "road_class == MOTORWAY"
            limit_to: 120
          - if: "surface == GRAVEL"
            multiply_by: 0.8
            
    - name: bike
      vehicle: bike
      weighting: custom
      custom_model:
        distance_influence: 70
        priority:
          - if: "bike_access == false"
            multiply_by: 0
        speed:
          - if: "bike_access == true"
            limit_to: 30
          - if: "surface == GRAVEL"
            multiply_by: 0.9
            
    - name: foot
      vehicle: foot
      weighting: custom
      custom_model:
        distance_influence: 70
        priority:
          - if: "foot_access == false"
            multiply_by: 0
        speed:
          - if: "foot_access == true"
            limit_to: 5
      
  # CH (Contraction Hierarchies) を有効化
  profiles_ch:
    - profile: car
    - profile: bike  
    - profile: foot
      
  # ルーティングの詳細設定
  routing:
    max_visited_nodes: 1000000

# サーバー設定
server:
  application_connectors:
    - type: http
      port: 8989
      bind_host: 0.0.0.0
  request_log:
    appenders: []